#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
#define ZMK_HELPER_STRINGIFY(x) #x

#define OS_UNICODE_LEAD &macro_tap &kp LS(LC(U))   // Linux
#define OS_UNICODE_TRAIL &macro_tap &kp SPACE     // Linux

#define UC_MACRO(name, unicode_bindings) \
        macros { \
            name: name { \
                compatible = "zmk,behavior-macro"; \
                label = ZMK_HELPER_STRINGIFY(UC_MACRO_ ## name); \
                wait-ms = <0>; \
                tap-ms = <0>; \
                #binding-cells = <0>; \
                bindings = <OS_UNICODE_LEAD>, <&macro_tap unicode_bindings>, <OS_UNICODE_TRAIL>; \
            }; \
        };

#define UC_MODMORPH(name, uc_binding, shifted_uc_binding) \
        behaviors { \
            name: name { \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(UC_MORPH_ ## name); \
                #binding-cells = <0>; \
                bindings = <uc_binding>, <shifted_uc_binding>; \
                mods = <(MOD_LSFT|MOD_RSFT)>; \
            }; \
        };

#define ZMK_UNICODE_SINGLE(name, L0, L1, L2, L3) \
    UC_MACRO(name ## _lower, &kp L0 &kp L1 &kp L2 &kp L3) \
    UC_MODMORPH(name, &name ## _lower, &none)

#define ZMK_UNICODE_PAIR(name, L0, L1, L2, L3, U0, U1, U2, U3) \
    UC_MACRO(name ## _lower, &kp L0 &kp L1 &kp L2 &kp L3) \
    UC_MACRO(name ## _upper, &kp U0 &kp U1 &kp U2 &kp U3) \
    UC_MODMORPH(name, &name ## _lower, &name ## _upper)

ZMK_UNICODE_SINGLE(de_sz, N0, N0, D, F)
//                name     unshifted         shifted
ZMK_UNICODE_PAIR(euro_sign, N2, N0, A, C,    N0, N0,  N2, N4 )
ZMK_UNICODE_PAIR( de_ae,   N0, N0,  E, N4,   N0, N0,  C,  N4 )
ZMK_UNICODE_PAIR( de_oe,   N0, N0,  F, N6,   N0, N0,  D,  N6 )
ZMK_UNICODE_PAIR( de_ue,   N0, N0,  F,  C,   N0, N0,  D,  C  )

        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <177>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC   &kp N1    &kp N2      &kp N3      &kp N4     &kp N5 &tog 1                                                          &mo 3 &kp N6 &kp N7     &kp N8         &kp N9        &kp N0   &kp MINUS
                &kp GRAVE &kp Q     &kp D       &ht LSHFT R &kp W      &kp B  &none                                                           &none &kp J  &kp F      &ht RSHFT U    &kp P         &kp SEMI &kp BSLH
                &kp EQUAL &kp A     &kp S       &kp H       &kp T      &kp G  &none           &sk LSHFT &kp CAPS &kp RC(PG_UP) &kp RC(PG_DN)  &none &kp Y  &kp N      &kp E          &kp O         &kp I    &kp SQT
                &sk LSHFT &kp Z     &ht LCTRL X &ht LGUI M  &kp C      &kp V                            &kp HOME &kp PG_UP                          &kp K  &ht RALT L &ht RGUI COMMA &ht RCTRL DOT &kp FSLH &sk RSHFT
                &mo 2     &none     &kp HOME    &kp LEFT    &kp RIGHT                &kp SPACE &kp BSPC &kp END  &kp PG_DN &kp TAB &kp ENTER               &kp UP     &kp DOWN       &kp END       &kp LBKT &kp RBKT
            >;
        };
        keypad {
            bindings = <
                &trans &none  &none    &none    &none      &none  &trans                                           &trans &trans &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &trans
                &trans &none  &none    &kp UP   &none      &none  &none                                            &none  &none  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &trans
                &trans &none  &kp LEFT &kp DOWN &kp RIGHT  &none  &none         &trans &trans &trans  &trans       &none  &none  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &trans
                &trans &none  &none    &none    &none      &none                       &trans &trans                      &none  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
                &mo 2  &trans &trans   &trans   &trans                   &trans &trans &trans &trans &trans &trans               &trans     &trans       &trans        &trans          &trans
            >;
        };
        fn {
            bindings = <
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 1                                           &mo 3 &kp F7 &kp F8 &kp F9     &kp F10 &kp F11 &kp F12
                &trans &trans &trans &trans &trans &trans  &none                                           &none &trans &trans &de_ue     &trans  &trans  &trans
                &trans &de_ae &de_sz &trans &trans &trans  &none        &trans &trans &trans &trans        &none &trans &trans &euro_sign &de_oe  &trans  &trans
                &trans &trans &trans &trans &trans &trans                      &trans &trans                     &trans &trans &trans     &trans  &trans  &trans
                &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans              &trans &trans     &trans  &trans  &trans
            >;
        };
        mod {
            bindings = <
                &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                               &trans      &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none        &bootloader                                                         &bootloader &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none        &none             &none &none &bt BT_CLR &none                      &none       &none &none      &none      &none &none &none
                &none &none        &none        &none        &none        &none                                &none &none                                             &none &none      &none      &none &none &none
                &none &none        &none        &none        &none                                 &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                   &bl BL_INC &bl BL_DEC &none &none &none
            >;
        };
    };
};
